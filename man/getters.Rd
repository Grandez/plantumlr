% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R6PlantUML.R, R/getters.R
\docType{class}
\name{PLANTUML}
\alias{PLANTUML}
\alias{getters}
\title{La clase para interactuar con plantuml}
\value{
el valor asociado al parametro de configuracion
}
\description{
Obtiene el valor asociado al parametro de configuracion
}
\note{
Se recomienda su uso en desarrollo para verificar que los valores son correctos
}
\examples{

## ------------------------------------------------
## Method `PLANTUML$new`
## ------------------------------------------------

PLANTUML$new()

}
\seealso{
\code{\link[=plot]{plot()}} para generacion en linea

\code{\link[=PLANTUML$checkInstallation]{PLANTUML$checkInstallation()}} para un chequeo completo

Other generics: 
\code{\link{plot.S3PlantUML}()}

Other generics: 
\code{\link{plot.S3PlantUML}()}
}
\concept{diagramas}
\concept{generics}
\concept{setters y getters}
\concept{verificacion}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{force}}{Flag para forzar la recreacion de diagramas}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PLANTUML$new()}}
\item \href{#method-plot}{\code{PLANTUML$plot()}}
\item \href{#method-file}{\code{PLANTUML$file()}}
\item \href{#method-image}{\code{PLANTUML$image()}}
\item \href{#method-asS3PlantUML}{\code{PLANTUML$asS3PlantUML()}}
\item \href{#method-readPlantUML}{\code{PLANTUML$readPlantUML()}}
\item \href{#method-checkConfiguration}{\code{PLANTUML$checkConfiguration()}}
\item \href{#method-checkInstallation}{\code{PLANTUML$checkInstallation()}}
\item \href{#method-setConfig}{\code{PLANTUML$setConfig()}}
\item \href{#method-getConfig}{\code{PLANTUML$getConfig()}}
\item \href{#method-getJVM}{\code{PLANTUML$getJVM()}}
\item \href{#method-getPlantUML}{\code{PLANTUML$getPlantUML()}}
\item \href{#method-getInputDir}{\code{PLANTUML$getInputDir()}}
\item \href{#method-getOutputDir}{\code{PLANTUML$getOutputDir()}}
\item \href{#method-getExt}{\code{PLANTUML$getExt()}}
\item \href{#method-getType}{\code{PLANTUML$getType()}}
\item \href{#method-getCharset}{\code{PLANTUML$getCharset()}}
\item \href{#method-setJVM}{\code{PLANTUML$setJVM()}}
\item \href{#method-setPlantUML}{\code{PLANTUML$setPlantUML()}}
\item \href{#method-setExt}{\code{PLANTUML$setExt()}}
\item \href{#method-setCharset}{\code{PLANTUML$setCharset()}}
\item \href{#method-setType}{\code{PLANTUML$setType()}}
\item \href{#method-setInputDir}{\code{PLANTUML$setInputDir()}}
\item \href{#method-setOutputDir}{\code{PLANTUML$setOutputDir()}}
\item \href{#method-clone}{\code{PLANTUML$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Crea una instancia de la clase PLANTUML
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{named values para definir la configuracion}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
detalles de la creacion
}

\subsection{Returns}{
La instancia del objeto
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{PLANTUML$new()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Genera un diagrama a partir de la definicion pasada
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$plot(data = NULL, type = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Definicion del diagrama o fichero con la misma}

\item{\code{type}}{Tipo de imagen. Defecto: png}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\preformatted{- Si no se especifica type se asume el tipo de imagen definido en la instancia
- El fichero con la imagen no se almacena en el sistema de archivos
}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-file"></a>}}
\if{latex}{\out{\hypertarget{method-file}{}}}
\subsection{Method \code{file()}}{
Genera un link al fichero de imagen con el diagrama
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$file(data = NULL, caption = NULL, force = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Definicion del diagrama o fichero con la misma}

\item{\code{caption}}{Titulo de la imagen}

\item{\code{force}}{Fuerza a regenerar el fichero}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
la cadena del link
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-image"></a>}}
\if{latex}{\out{\hypertarget{method-image}{}}}
\subsection{Method \code{image()}}{
Genera una imagen con el diagrama
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$image(data = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Definicion del diagrama o fichero con la misma}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
un objeto "magick" con la imagen
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-asS3PlantUML"></a>}}
\if{latex}{\out{\hypertarget{method-asS3PlantUML}{}}}
\subsection{Method \code{asS3PlantUML()}}{
Si es posible, convierte los datos pasados en una clase PLANTUML
Usado desde la funcion generica as.plantuml. \strong{No invocar directamente}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$asS3PlantUML(umlData = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Definicion del diagrama en formato texto}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
una clase S3PlantUML
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-readPlantUML"></a>}}
\if{latex}{\out{\hypertarget{method-readPlantUML}{}}}
\subsection{Method \code{readPlantUML()}}{
Carga un fichero de definicion de diagrama como clase S3PlantUML
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$readPlantUML(fileName = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fileName}}{Path al fichero con la definicion}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
una clase S3PlantUML
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checkConfiguration"></a>}}
\if{latex}{\out{\hypertarget{method-checkConfiguration}{}}}
\subsection{Method \code{checkConfiguration()}}{
\preformatted{Verifica la corrección de los datos de configuración de la clase.
Se recomienda su uso en desarrollo para verificar que los valores son correctos
El que indique que la configuracion es correcta no implica que el sistema funcione
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$checkConfiguration(verbose = TRUE, first = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Si TRUE muestra informacion de progreso por la consola}

\item{\code{first}}{Si TRUE se detiene en el primer error}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE si la configuracion es correcta
FALSE en caso contrario
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checkInstallation"></a>}}
\if{latex}{\out{\hypertarget{method-checkInstallation}{}}}
\subsection{Method \code{checkInstallation()}}{
Verifica la correccion de la instalacion. Es decir, si todos los
componentes estan correctamente configurados y pueden ser ejecutados
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$checkInstallation(verbose = TRUE, first = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Si TRUE muestra informacion de progreso por la consola}

\item{\code{first}}{Si TRUE se detiene en el primer error}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE si la configuracion es correcta
FALSE en caso contrario
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setConfig"></a>}}
\if{latex}{\out{\hypertarget{method-setConfig}{}}}
\subsection{Method \code{setConfig()}}{
Cambia los datos de configuracion de la instancia
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setConfig(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{named values para definir la configuracion}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
La instancia del objeto
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getConfig"></a>}}
\if{latex}{\out{\hypertarget{method-getConfig}{}}}
\subsection{Method \code{getConfig()}}{
Obtiene los datos de configuracion
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getConfig()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Una lista con los datos de configuracion
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getJVM"></a>}}
\if{latex}{\out{\hypertarget{method-getJVM}{}}}
\subsection{Method \code{getJVM()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getJVM()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPlantUML"></a>}}
\if{latex}{\out{\hypertarget{method-getPlantUML}{}}}
\subsection{Method \code{getPlantUML()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getPlantUML()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getInputDir"></a>}}
\if{latex}{\out{\hypertarget{method-getInputDir}{}}}
\subsection{Method \code{getInputDir()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getInputDir()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getOutputDir"></a>}}
\if{latex}{\out{\hypertarget{method-getOutputDir}{}}}
\subsection{Method \code{getOutputDir()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getOutputDir()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getExt"></a>}}
\if{latex}{\out{\hypertarget{method-getExt}{}}}
\subsection{Method \code{getExt()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getExt()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getType"></a>}}
\if{latex}{\out{\hypertarget{method-getType}{}}}
\subsection{Method \code{getType()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getType()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getCharset"></a>}}
\if{latex}{\out{\hypertarget{method-getCharset}{}}}
\subsection{Method \code{getCharset()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$getCharset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setJVM"></a>}}
\if{latex}{\out{\hypertarget{method-setJVM}{}}}
\subsection{Method \code{setJVM()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setJVM(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setPlantUML"></a>}}
\if{latex}{\out{\hypertarget{method-setPlantUML}{}}}
\subsection{Method \code{setPlantUML()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setPlantUML(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setExt"></a>}}
\if{latex}{\out{\hypertarget{method-setExt}{}}}
\subsection{Method \code{setExt()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setExt(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setCharset"></a>}}
\if{latex}{\out{\hypertarget{method-setCharset}{}}}
\subsection{Method \code{setCharset()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setCharset(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setType"></a>}}
\if{latex}{\out{\hypertarget{method-setType}{}}}
\subsection{Method \code{setType()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setType(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setInputDir"></a>}}
\if{latex}{\out{\hypertarget{method-setInputDir}{}}}
\subsection{Method \code{setInputDir()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setInputDir(value = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setOutputDir"></a>}}
\if{latex}{\out{\hypertarget{method-setOutputDir}{}}}
\subsection{Method \code{setOutputDir()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$setOutputDir(value = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PLANTUML$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
